<%- include _header.ejs -%>

<% loginTypes.forEach(function(loginType) { %>
    <p  class="u-margin-top-xs">
        <a href="<%- loginType.url %>" id="link<%- loginType.key %>"><%- loginType.title %></a>
    </p>
<% }); %>

<div class="a-input u-margin-top" title="Adds &quot;save_consent=true&quot; to the authorize URL">
    <div class="a-input__checkbox">
        <input type="checkbox" id="saveConsent" name="consent" value="save" />
        <label for="saveConsent">Save consent</label>
    </div>
    <h6 class="u-margin-top u-margin-bottom-xs ">consent versie</h6>
    <div class="a-input__radio">
      <input type="radio" id="consent" name="consent-version" value="consent">
      <label for="consent">Send current to consent</label>
    </div>
    <div class="a-input__radio">
      <input type="radio" id="consent1" name="consent-version" value="consent1">
      <label for="consent1">Send to consent1.0</label>
    </div>
    <div class="a-input__radio">
      <input type="radio" id="consent2" name="consent-version" value="consent2">
      <label for="consent2">Send to consent2.0</label>
    </div>
</div>

<script>
    const consent_base_url = {
      consent: '<%- baseurl_consent %>',
      consent1: '<%- baseurl_consent1 %>',
      consent2: '<%- baseurl_consent2 %>'
    }
    function setCookie(name, value, expire) {
        var expireDate = new Date();
        expireDate.setDate(expireDate.getDate() + expire);
        document.cookie = name + "=" + escape(value) + "; expires=" + expireDate.toGMTString() + "; path=/";
    }

    function readCookie(name) {
        var nameEQ = name + "=";
        var ca = document.cookie.split(';');
        for (var i = 0; i < ca.length; i++) {
            var c = ca[i];
            while (c.charAt(0) == ' ') c = c.substring(1, c.length);
            if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length, c.length);
        }
        return null;
    }
    function setConsent(linkElementId, saveConsent) {
      const url = document.getElementById(linkElementId).getAttribute('href');
      if (url.includes('&save_consent=true') && !saveConsent ) {
        document.getElementById(linkElementId).setAttribute('href', url.replace('&save_consent=true', ''));
      }
      if (!url.includes('&save_consent=true') && saveConsent ) {
          document.getElementById(linkElementId).setAttribute('href', `${url}&save_consent=true`);
      }
    }
    function setDomain(linkElementId, newConsentUrl) {
      const url = document.getElementById(linkElementId).getAttribute('href');
      let from = url.match(/^https?:\/\/[^#?\/]+/)[0];
      document.getElementById(linkElementId).setAttribute('href', url.replace(from, newConsentUrl))
    }
    if(readCookie("consent_version")){
      Array.from(document.getElementsByName("consent-version")).find((element) => {
        if(element.value === readCookie("consent_version")) {
          document.getElementById('consent2').checked = true;
        }
      });
        document.getElementById(readCookie("consent_version")).checked = true;
        <% loginTypes.forEach(function (loginType) { %>
           setDomain('link<%- loginType.key %>', consent_base_url[readCookie("consent_version")]);
        <% }); %>
    } else {
      document.getElementById('consent').checked = true;
    }
    Array.from(document.getElementsByName("consent-version")).forEach((target) => {
      target.addEventListener('change', (event) => {
        var consent_version = Array.from(document.getElementsByName("consent-version")).find(r => r.checked).value;
        setCookie("consent_version", consent_version, new Date(Date.now() + 8*3600*1000));
        <% loginTypes.forEach(function (loginType) { %>
           setDomain('link<%- loginType.key %>', consent_base_url[readCookie("consent_version")]);
        <% }); %>
      });
    });
</script>

<%- include _footer.ejs -%>
